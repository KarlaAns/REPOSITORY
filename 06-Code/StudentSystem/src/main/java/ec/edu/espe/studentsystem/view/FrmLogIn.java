package ec.edu.espe.studentsystem.view;

import ec.edu.espe.studentsystem.controller.LogInController;
import ec.edu.espe.studentsystem.controller.ThemeController;
import java.awt.EventQueue;
import java.awt.HeadlessException;
import javax.swing.JOptionPane;
import javax.swing.UIManager;

/**
 *
 * @author Alejandro Andrade, Scriptal, DCCO_ESPE
 */
public class FrmLogIn extends javax.swing.JFrame {

    /**
     * Creates new form FrmLogIn
     */
    public FrmLogIn() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        tfId = new javax.swing.JTextField();
        btnSubmit2 = new javax.swing.JButton();
        lblID2 = new javax.swing.JLabel();
        lblPass2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        pfPassword = new javax.swing.JPasswordField();
        jMenuBar1 = new javax.swing.JMenuBar();
        mnStudentSystem = new javax.swing.JMenu();
        mniHome = new javax.swing.JMenuItem();
        mniAbout = new javax.swing.JMenuItem();
        mnManage = new javax.swing.JMenu();
        menuView = new javax.swing.JMenu();
        cbmiDarkMode = new javax.swing.JCheckBoxMenuItem();
        menuHelp = new javax.swing.JMenu();
        mnMail = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1000, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 64, Short.MAX_VALUE)
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        btnSubmit2.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnSubmit2.setText("Submit");
        btnSubmit2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmit2ActionPerformed(evt);
            }
        });

        lblID2.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblID2.setText("ID:");

        lblPass2.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        lblPass2.setText("Password:");

        jLabel3.setFont(new java.awt.Font("Dialog", 1, 60)); // NOI18N
        jLabel3.setText("Log In");

        pfPassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pfPasswordActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblID2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblPass2, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(pfPassword, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(tfId, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 174, Short.MAX_VALUE))))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(96, 96, 96)
                        .addComponent(btnSubmit2, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(73, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(lblID2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(lblPass2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(btnSubmit2)
                .addContainerGap(74, Short.MAX_VALUE))
        );

        mnStudentSystem.setText("StudentSystem");

        mniHome.setText("Home");
        mniHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniHomeActionPerformed(evt);
            }
        });
        mnStudentSystem.add(mniHome);

        mniAbout.setText("About");
        mniAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mniAboutActionPerformed(evt);
            }
        });
        mnStudentSystem.add(mniAbout);

        jMenuBar1.add(mnStudentSystem);

        mnManage.setText("Manage");
        jMenuBar1.add(mnManage);

        menuView.setText("View");

        cbmiDarkMode.setText("Dark Mode");
        cbmiDarkMode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbmiDarkModeActionPerformed(evt);
            }
        });
        menuView.add(cbmiDarkMode);

        jMenuBar1.add(menuView);

        menuHelp.setText("Help");
        menuHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuHelpActionPerformed(evt);
            }
        });

        mnMail.setText("Mail");
        mnMail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnMailActionPerformed(evt);
            }
        });
        menuHelp.add(mnMail);

        jMenuBar1.add(menuHelp);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(338, 338, 338))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(112, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void mniAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniAboutActionPerformed

        FrmAboutUs aboutUs = new FrmAboutUs();
        aboutUs.setVisible(true);
        if ("FlatLaf Light".equals(UIManager.getLookAndFeel().getName()))
        {
            aboutUs.setStatusCbmiDarkMode(false);
        } else
        {
            aboutUs.setStatusCbmiDarkMode(true);
        }
        this.dispose();
    }//GEN-LAST:event_mniAboutActionPerformed

    private void cbmiDarkModeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbmiDarkModeActionPerformed
        if (cbmiDarkMode.isSelected())
        {
            EventQueue.invokeLater(new Runnable() {
                @Override
                public void run() {
                    ThemeController.setDarkTheme();
                }
            });
        } else
        {
            EventQueue.invokeLater(new Runnable() {
                @Override
                public void run() {
                    ThemeController.setFlatLightLafTheme();
                }
            });
        }
    }//GEN-LAST:event_cbmiDarkModeActionPerformed

    private void mniHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mniHomeActionPerformed
        FrmMain main = new FrmMain();
        main.setVisible(true);
        System.out.println(UIManager.getLookAndFeel().getName());
        if ("FlatLaf Light".equals(UIManager.getLookAndFeel().getName()))
        {
            main.setStatusCbmiDarkMode(false);
        } else
        {
            main.setStatusCbmiDarkMode(true);
        }
        this.dispose();
    }//GEN-LAST:event_mniHomeActionPerformed

    private void btnSubmit2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmit2ActionPerformed

        boolean infoValid = validateId();
        infoValid = validatePassword();

        if (infoValid)
        {
            validationForPrincipal();
            validationForTeacher();
            validationForStudent();
        }
    }//GEN-LAST:event_btnSubmit2ActionPerformed

    public boolean validatePassword() throws HeadlessException {
        if (pfPassword.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "First fill the password field");
            return false;
        }
        return true;
    }

    public boolean validateId() throws HeadlessException {
        
        if (tfId.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "First fill the ID field");
            return false;
        }
        if (!tfId.getText().matches("[0-9]*"))
        {
            JOptionPane.showMessageDialog(this, "Invalid ID");            
        }
        if (Integer.parseInt(tfId.getText()) > 100000)
        {
            JOptionPane.showMessageDialog(this, "Invalid ID");
            return false;
        } else if (Integer.parseInt(tfId.getText()) < 10000)
        {
            JOptionPane.showMessageDialog(this, "Invalid ID");
            return false;
        }
        return true;
    }

    private void validationForStudent() throws HeadlessException, NumberFormatException {
        if (Integer.parseInt(tfId.getText()) < 50000 && Integer.parseInt(tfId.getText()) > 10000)
        {
            int id = Integer.parseInt(tfId.getText());
            String password = pfPassword.getText();
            LogInController logInController= new LogInController();
            boolean match = logInController.matchInMongo(id, password);
            if (match)
            {
                createFrameStudent();
            } else
            {
                JOptionPane.showMessageDialog(this, "ID and password don't match");
            }
        }
    }

    private void validationForTeacher() throws HeadlessException, NumberFormatException {
        if (Integer.parseInt(tfId.getText()) < 99000 && Integer.parseInt(tfId.getText()) > 50000)
        {
            int id = Integer.parseInt(tfId.getText());
            String password = pfPassword.getText();
            LogInController logInController= new LogInController();
            boolean match = logInController.matchInMongo(id, password);
            if (match)
            {
                createFrameTeacher();
            } else
            {
                JOptionPane.showMessageDialog(this, "ID and password don't match");
            }
        }
    }

    private void validationForPrincipal() throws HeadlessException, NumberFormatException {
        if (Integer.parseInt(tfId.getText()) < 100000 && Integer.parseInt(tfId.getText()) > 99000)
        {
            int id = Integer.parseInt(tfId.getText());
            String password = pfPassword.getText();
            LogInController logInController= new LogInController();
            boolean match = logInController.matchInMongo(id, password);
            if (match)
            {
                createFramePrincipal();
            } else
            {
                JOptionPane.showMessageDialog(this, "ID and password don't match");
            }
        }
    }

    private void menuHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuHelpActionPerformed
        FrmHelp newHelp = new FrmHelp();
        newHelp.setVisible(true);
        if ("FlatLaf Light".equals(UIManager.getLookAndFeel().getName()))
        {
            newHelp.setStatusCbmiDarkMode(false);
        } else
        {
            newHelp.setStatusCbmiDarkMode(true);
        }
        this.dispose();
    }//GEN-LAST:event_menuHelpActionPerformed

    private void mnMailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnMailActionPerformed
        FrmHelp newHelp = new FrmHelp();
        newHelp.setVisible(true);
        if ("FlatLaf Light".equals(UIManager.getLookAndFeel().getName()))
        {
            newHelp.setStatusCbmiDarkMode(false);
        } else
        {
            newHelp.setStatusCbmiDarkMode(true);
        }
        this.dispose();
    }//GEN-LAST:event_mnMailActionPerformed

    private void pfPasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pfPasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pfPasswordActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        ThemeController.setFlatLightLafTheme();

        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmLogIn().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSubmit2;
    private javax.swing.JCheckBoxMenuItem cbmiDarkMode;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel lblID2;
    private javax.swing.JLabel lblPass2;
    private javax.swing.JMenu menuHelp;
    private javax.swing.JMenu menuView;
    private javax.swing.JMenuItem mnMail;
    private javax.swing.JMenu mnManage;
    private javax.swing.JMenu mnStudentSystem;
    private javax.swing.JMenuItem mniAbout;
    private javax.swing.JMenuItem mniHome;
    private javax.swing.JPasswordField pfPassword;
    private javax.swing.JTextField tfId;
    // End of variables declaration//GEN-END:variables

    public int getTfId() {
        return Integer.parseInt(tfId.getText());
    }

    public String getPfPassword() {
        return pfPassword.getText();
    }

    public boolean getStatusCbmiDarkMode() {
        return cbmiDarkMode.isSelected();
    }

    public void setStatusCbmiDarkMode(boolean isSelected) {
        this.cbmiDarkMode.setSelected(isSelected);
    }

    private void createFramePrincipal() {
        FrmPrincipal frmPrincipal = new FrmPrincipal();
        frmPrincipal.setVisible(true);
        if ("FlatLaf Light".equals(UIManager.getLookAndFeel().getName()))
        {
            frmPrincipal.setStatusCbmiDarkMode(false);
        } else
        {
            frmPrincipal.setStatusCbmiDarkMode(true);
        }
        this.dispose();
    }

    private void createFrameTeacher() {
        int teacherId = Integer.parseInt(tfId.getText());
        FrmTeacher frmTeacher = new FrmTeacher(teacherId);
        frmTeacher.setVisible(true);
        if ("FlatLaf Light".equals(UIManager.getLookAndFeel().getName()))
        {
            frmTeacher.setStatusCbmiDarkMode(false);
        } else
        {
            frmTeacher.setStatusCbmiDarkMode(true);
        }
        this.dispose();
    }

    private void createFrameStudent() {
        FrmStudent frmStudent = new FrmStudent(getTfId(), getPfPassword());
        frmStudent.setVisible(true);
        if ("FlatLaf Light".equals(UIManager.getLookAndFeel().getName()))
        {
            frmStudent.setStatusCbmiDarkMode(false);
        } else
        {
            frmStudent.setStatusCbmiDarkMode(true);
        }
        this.dispose();
    }

}
